<?php

namespace PiedraBundle\Repository;

/**
 * UsuarioRedRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsuarioRedRepository extends \Doctrine\ORM\EntityRepository
{





	/*
    * listado usuario de la red sin los especiales
    */
    public function getUsuarioRedSinEspeciales(){

        $em= $this->getEntityManager();

        $dql ='SELECT u FROM PiedraBundle:UsuarioRed u ORDER BY u.id ASC ';
        $usuario_red = $em->createQuery($dql);  
        $usuario_red = $usuario_red->getResult();

        $usuario_red = $this->listaString($usuario_red);

        return $usuario_red; 
    }


    /*
    * listado usuario de la red solo los especiales
    */
    public function getUsuarioRedEspeciales(){

        $em= $this->getEntityManager();

        $dql ='SELECT u.id, u.usuario , dom.nombre dominio, d.nombre departamento FROM PiedraBundle:UsuarioRed u JOIN u.departamento d JOIN u.dominio dom Where d.id = 36 ORDER BY d.id ASC ';
        $usuario_red = $em->createQuery($dql);       

        return $usuario_red->getResult(); 
    }


    public function getUsuarioRedASC(){
        $em= $this->getEntityManager();
        $dql ='SELECT ur FROM PiedraBundle:UsuarioRed ur ORDER BY ur.usuario Asc';
        $dql = $em->createQuery($dql); 
        return $dql->getResult();      
    }

    public function getUsuarioRedASCArray(){
        $em= $this->getEntityManager();
        $dql ='SELECT ur.id, ur.usuario FROM PiedraBundle:UsuarioRed ur ORDER BY ur.usuario Asc';
        $dql = $em->createQuery($dql); 
        return $dql->getResult();      
    }



    /*
    * convierte arreglo en listata string para select
    */
    public function listaString($listado){

        $list = "{"; $cont = 0;
        foreach ($listado as $lista) {
            $cont++;
            if($cont == count($listado)){
                $list .= '"'.$lista->getId().'": "'.$lista->getUsuario().'"}';
            }else{
                $list .= '"'.$lista->getId().'": "'.$lista->getUsuario().'",';
            }            
         } 


        return $list;
    }





    
}
