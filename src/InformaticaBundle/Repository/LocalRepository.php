<?php

namespace InformaticaBundle\Repository;

/**
 * LocalesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LocalRepository extends \Doctrine\ORM\EntityRepository
{
             
	/*
	* Listado Municipios por provincias 
	*/
	public function getResponsables($unidad){

		$em = $this->getEntityManager();    

		$array = array();   
     
        $local = 'SELECT l FROM InformaticaBundle:Local l WHERE l.unidad=:unidad ORDER By l.id ASC';
        $local = $em->createQuery($local); 
        $local = $local->setParameter('unidad', $unidad)->getResult();
        
        foreach ($local as $l) {
        	$responsable = 'SELECT r.id, r.responsable , c.cargo, c.id id_cargo FROM InformaticaBundle:Responsable r JOIN r.cargo c JOIN r.local l WHERE l.id=:idL ORDER By r.id ASC ';
        	$responsable = $em->createQuery($responsable);
        	$responsable = $responsable
        					->setParameter('idL', $l->getId())
        					->getResult();

        	$array[] = array(
        		'local'=> $l,
        		'responsables'=> $responsable
        	);
        }

        return $array;        
	}


        /*
        * obtener los locales q existen equipos informaticos
        */
        public function getLocalEquipo($unidad){
                $em = $this->getEntityManager();    

                $locales = 'SELECT l.id, l.local, l.codigo FROM InformaticaBundle:Equipo e JOIN e.responsable r JOIN r.local l WHERE e.unidad=:unidad GROUP BY l.id ORDER By l.id ASC';
                $locales = $em->createQuery($locales); 
                $locales = $locales->setParameter('unidad', $unidad)->getResult();

                return $locales;

        }


        /*
        * Listado de locales
        */
        public function getLocales($unidad){

                $em = $this->getEntityManager();    

                $locales = 'SELECT l.id, l.local, a.area, l.codigo FROM InformaticaBundle:Local l JOIN l.area a 
                            WHERE l.unidad=:unidad 
                            ORDER By l.id ASC';
                $locales = $em->createQuery($locales); 
                $locales = $locales->setParameter('unidad', $unidad)->getResult();

                return $locales;

        }
}
