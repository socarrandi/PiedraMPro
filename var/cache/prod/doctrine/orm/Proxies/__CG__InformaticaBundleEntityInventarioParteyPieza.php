<?php

namespace Proxies\__CG__\InformaticaBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class InventarioParteyPieza extends \InformaticaBundle\Entity\InventarioParteyPieza implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'id', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'idpieza', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'tipo', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'marca', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'modelo', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'noserie', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'cTecnicas', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'otrabajo', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'factura', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'importe', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'mes', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'ano', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'movimiento'];
        }

        return ['__isInitialized__', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'id', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'idpieza', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'tipo', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'marca', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'modelo', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'noserie', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'cTecnicas', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'otrabajo', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'factura', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'importe', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'mes', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'ano', '' . "\0" . 'InformaticaBundle\\Entity\\InventarioParteyPieza' . "\0" . 'movimiento'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (InventarioParteyPieza $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarca($marca)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarca', [$marca]);

        return parent::setMarca($marca);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarca()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarca', []);

        return parent::getMarca();
    }

    /**
     * {@inheritDoc}
     */
    public function setModelo($modelo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModelo', [$modelo]);

        return parent::setModelo($modelo);
    }

    /**
     * {@inheritDoc}
     */
    public function getModelo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModelo', []);

        return parent::getModelo();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoserie($noserie)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoserie', [$noserie]);

        return parent::setNoserie($noserie);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoserie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoserie', []);

        return parent::getNoserie();
    }

    /**
     * {@inheritDoc}
     */
    public function setCTecnicas($cTecnicas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCTecnicas', [$cTecnicas]);

        return parent::setCTecnicas($cTecnicas);
    }

    /**
     * {@inheritDoc}
     */
    public function getCTecnicas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCTecnicas', []);

        return parent::getCTecnicas();
    }

    /**
     * {@inheritDoc}
     */
    public function setOtrabajo($otrabajo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOtrabajo', [$otrabajo]);

        return parent::setOtrabajo($otrabajo);
    }

    /**
     * {@inheritDoc}
     */
    public function getOtrabajo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtrabajo', []);

        return parent::getOtrabajo();
    }

    /**
     * {@inheritDoc}
     */
    public function setFactura($factura)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFactura', [$factura]);

        return parent::setFactura($factura);
    }

    /**
     * {@inheritDoc}
     */
    public function getFactura()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFactura', []);

        return parent::getFactura();
    }

    /**
     * {@inheritDoc}
     */
    public function setImporte($importe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImporte', [$importe]);

        return parent::setImporte($importe);
    }

    /**
     * {@inheritDoc}
     */
    public function getImporte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImporte', []);

        return parent::getImporte();
    }

    /**
     * {@inheritDoc}
     */
    public function setMes($mes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMes', [$mes]);

        return parent::setMes($mes);
    }

    /**
     * {@inheritDoc}
     */
    public function getMes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMes', []);

        return parent::getMes();
    }

    /**
     * {@inheritDoc}
     */
    public function setAno($ano)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAno', [$ano]);

        return parent::setAno($ano);
    }

    /**
     * {@inheritDoc}
     */
    public function getAno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAno', []);

        return parent::getAno();
    }

    /**
     * {@inheritDoc}
     */
    public function setMovimiento($movimiento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMovimiento', [$movimiento]);

        return parent::setMovimiento($movimiento);
    }

    /**
     * {@inheritDoc}
     */
    public function getMovimiento()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMovimiento', []);

        return parent::getMovimiento();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdpieza(\InformaticaBundle\Entity\Pieza $idpieza = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdpieza', [$idpieza]);

        return parent::setIdpieza($idpieza);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdpieza()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdpieza', []);

        return parent::getIdpieza();
    }

    /**
     * {@inheritDoc}
     */
    public function setTipo(\InformaticaBundle\Entity\TipoEquipo $tipo = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTipo', [$tipo]);

        return parent::setTipo($tipo);
    }

    /**
     * {@inheritDoc}
     */
    public function getTipo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTipo', []);

        return parent::getTipo();
    }

}
