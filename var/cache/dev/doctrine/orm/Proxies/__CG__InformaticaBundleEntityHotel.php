<?php

namespace Proxies\__CG__\InformaticaBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Hotel extends \InformaticaBundle\Entity\Hotel implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'id', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'hotel', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'proveedor', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'enlaceAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'servidorAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'baseAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'usuarioAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'passwordAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'genericoAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'enc'];
        }

        return ['__isInitialized__', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'id', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'hotel', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'proveedor', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'enlaceAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'servidorAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'baseAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'usuarioAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'passwordAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'genericoAFT', '' . "\0" . 'InformaticaBundle\\Entity\\Hotel' . "\0" . 'enc'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Hotel $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setHotel($hotel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHotel', [$hotel]);

        return parent::setHotel($hotel);
    }

    /**
     * {@inheritDoc}
     */
    public function getHotel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHotel', []);

        return parent::getHotel();
    }

    /**
     * {@inheritDoc}
     */
    public function setProveedor($proveedor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProveedor', [$proveedor]);

        return parent::setProveedor($proveedor);
    }

    /**
     * {@inheritDoc}
     */
    public function getProveedor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProveedor', []);

        return parent::getProveedor();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnlaceAFT($enlaceAFT)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnlaceAFT', [$enlaceAFT]);

        return parent::setEnlaceAFT($enlaceAFT);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnlaceAFT()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnlaceAFT', []);

        return parent::getEnlaceAFT();
    }

    /**
     * {@inheritDoc}
     */
    public function setServidorAFT($servidorAFT)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServidorAFT', [$servidorAFT]);

        return parent::setServidorAFT($servidorAFT);
    }

    /**
     * {@inheritDoc}
     */
    public function getServidorAFT()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServidorAFT', []);

        return parent::getServidorAFT();
    }

    /**
     * {@inheritDoc}
     */
    public function setBaseAFT($baseAFT)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBaseAFT', [$baseAFT]);

        return parent::setBaseAFT($baseAFT);
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseAFT()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseAFT', []);

        return parent::getBaseAFT();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsuarioAFT($usuarioAFT)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsuarioAFT', [$usuarioAFT]);

        return parent::setUsuarioAFT($usuarioAFT);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsuarioAFT()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsuarioAFT', []);

        return parent::getUsuarioAFT();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordAFT($passwordAFT)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordAFT', [$passwordAFT]);

        return parent::setPasswordAFT($passwordAFT);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordAFT()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordAFT', []);

        return parent::getPasswordAFT();
    }

    /**
     * {@inheritDoc}
     */
    public function setGenericoAFT($genericoAFT)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGenericoAFT', [$genericoAFT]);

        return parent::setGenericoAFT($genericoAFT);
    }

    /**
     * {@inheritDoc}
     */
    public function getGenericoAFT()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenericoAFT', []);

        return parent::getGenericoAFT();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnc($enc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnc', [$enc]);

        return parent::setEnc($enc);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnc', []);

        return parent::getEnc();
    }

}
